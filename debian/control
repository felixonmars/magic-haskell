Source: missingpy
Priority: optional
Maintainer: John Goerzen <jgoerzen@complete.org>
Build-Depends: debhelper (>= 4.0.0), ghc6 (>= 6.4), ghc6 (<< 6.4-999), haskell-devscripts (>= 0.5.6), python-dev (>= 2.3.3), python-gdbm (>= 2.3.3), haddock, python-dev (<< 2.4), libghc6-missingh-dev (>= 0.11.0)
#Build-Depends-Indep: debhelper (>= 4.0.0), haddock, hugs, haskell-devscripts (>= 0.5.4), libhugs-hunit
Standards-Version: 3.6.1
Section: devel

Package: libghc6-missingpy-dev
Section: devel
Architecture: any
Depends: ${haskell:Depends}, python-dev (>= 2.3.3), python-dev (<< 2.4), libghc6-missingh-dev (>= 0.11.0)
Suggests: python-gdbm (>= 2.3.3)
Description: Python interface and utility library for Haskell
 MissingPy is two things:
 .
 A Haskell binding for many C and Python libraries for tasks such as
 data compression, databases, etc.  This can be found in the
 MissingPy module tree.
 .
 Also, it's a low-level Haskell binding to the Python interpreter to
 enable development of hybrid applications that use both
 environments.  This can be found in the Python module tree.  The
 Haskell bindings above use this environment.
 .
 MissingPy permits you to call Python code from Haskell.  It does NOT
 permit you to call Haskell code from Python.
 .
 MissingPy is the companion to my MissingH library, and integrates with
 it.
